.site {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  &-main {
    flex-grow: 1;
  }
}

// ---
// Container and widths.

%container {
  box-sizing: content-box;
  padding-right: fluid($spacing-min, $spacing-max);
  padding-left: fluid($spacing-min, $spacing-max);
  width: 100%;
  max-width: calc(100% - #{fluid($spacing-min * 2, $spacing-max * 2)});
  margin-right: auto;
  margin-left: auto;
}

.container {
  @extend %container;
}

@each $name, $breakpoint in $breakpoints {
  %container-#{$name} {
    @extend %container;
    width: MIN(var(--width-#{$name}), 100%);
  }

  .container-#{$name} {
    @extend %container-#{$name};
  }

  %width-#{$name} {
    max-width: 100%;
    width: MIN(var(--width-#{$name}), 100%);
  }

  .width-#{$name} {
    @extend %width-#{$name};
  }
}

.pin-spacer {
  max-width: none !important;
}

// ---
// Block layout

.full-view > .entry-header {
  @extend %container-content;
}

.full-view > .entry-content {
  > * {
    // all z-index elements only refers to this element
    isolation: isolate;
  }

  > *,
  .alignfull > *,
  .swiper.alignfull > .swiper-wrapper > * {
    @extend %container-content;

    @each $name, $breakpoint in $breakpoints {
      &.width-#{$name},
      &.container-#{$name} {
        @extend %container-#{$name};
      }
    }

    &.alignwide {
      @extend %container-wide;
    }
  }

  .swiper-wrapper,
  .wp-block-cover__background, .wp-block-cover__image-background {
    padding: 0;
    width: 100%;
    max-width: none;
  }

  .alignfull {
    &.wp-block-image,
    &.wp-block-video {
      > * {
        padding: 0;
        width: 100%;
        max-width: none;
      }
    }
  }
}

// ---
// Gallery.

.gallery {
  margin-bottom: 1.5em;
  display: grid;
  grid-gap: 1.5em;

  &-item {
    display: inline-block;
    text-align: center;
    width: 100%;
  }

  // loops to enumerate the classes for gallery columns
  @for $i from 2 through 9 {
    &-columns-#{$i} {
      grid-template-columns: repeat($i, 1fr);
    }
  }

  &-caption {
    display: block;
  }
}

// ---
// Grid.

[data-type="teaser-list/block"],
.wp-block-group.is-layout-grid {
  display: grid;
  gap: var(--gap, 1em);

  @for $i from 2 through 9 {
    &[data-grid="#{$i}"] {
      grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
    }
  }

  @include mobile {
    &[data-grid] > div { grid-template-columns: 1fr; }
  }

  .wp-element-button.load-more {
    grid-column: 1/-1;
  }
}

// not quite sure why content is wrapped in an extra `div`
// ... but here we are
[data-type="teaser-list/block"] > div {
  grid-column: 1/-1;
  display: grid;
  grid-template-columns: subgrid;
  pointer-events: none;
}

// ---
// Buttons.

.wp-block-buttons {
  display: flex;
  flex-wrap: wrap;
  gap: .5em;
}

button, .wp-block-button__link, .wp-element-button, [type="submit"] {
  cursor: pointer;
}

// ---
// Colors.

@each $name, $color in $colors {
  %color-#{$name} {
    @if $name != copy { --color-copy: var(--color-#{$name}); }
    @if $name != heading { --color-heading: var(--color-#{$name}); }
    color: var(--color-#{$name});

    svg {
      fill: currentColor;
    }

    @at-root svg#{&} {
      fill: currentColor;
    }
  }

  .has-#{$name}-color,
  .color-#{$name} {
    @extend %color-#{$name};
  }

  %bgcolor-#{$name} {
    background-color: var(--color-#{unquote($name)});

    svg {
      fill: currentColor;
    }

    // auto light color on dark backgrounds
    @if type-of($color) == color {
      @if lightness($color) < $lightness-threshold {
        --color-copy: var(--color-light, #fff);
        --color-heading: var(--color-light, #fff);
        color: var(--color-light, #fff);
      }
      @else {
        --color-copy: var(--color-black);
        --color-heading: var(--color-black);
        color: var(--color-black);
      }
    }
  }

  .has-#{$name}-background-color,
  .bgcolor-#{$name} {
    @extend %bgcolor-#{$name};
  }

  svg.has-#{$name}-color {
    fill: var(--color-#{$name})
  }
}

// ---
// Make sure logo link wraps around logo image.

.custom-logo-link {
  display: block;
  line-height: 0;

  // by default we hide `.site-title` and `.site-description`
  ~ .site-title,
  ~ .site-description {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
  }
}

@import "../inc/gutenberg/inc/hide/css/style";

// ---
// _No list_ lists.

%list-unstyled {
  list-style: none;
  padding-right: 0;
  padding-left: 0;
  margin-bottom: 0;
}

.list-unstyled {
  @extend %list-unstyled;
}

// ---
// The following are kind of default WP styles.

// do not show the outline on the skip link target
#primary[tabindex="-1"]:focus {
  outline: 0;
}

// hide updated date
.updated:not(.published) {
  display: none;
}

// ---
// Screen reader.

.screen-reader-text,
.sr-only {
  @include sr-only;
}

.sr-only-focusable {
  @include sr-only(true);
}

// ---
// Alignments.

.align {
  &right {
    margin-right: initial;
    margin-left: auto !important;

    @at-root svg#{&} {
      display: block;
    }
  }

  &center {
    clear: inherit;
    margin-right: auto;
    margin-left: auto;

    @at-root svg#{&} {
      display: block;
    }
  }

  &left {
    margin-right: auto;
    margin-left: initial;

    @at-root svg#{&} {
      display: block;
    }
  }
}

%alignwide {
  @extend %width-wide;
}

.alignwide {
  @extend %alignwide;
}

// ---
// Smileys.

.page-content .wp-smiley,
.entry-content .wp-smiley,
.comment-content .wp-smiley {
  border: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
}

